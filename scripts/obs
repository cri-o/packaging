#!/usr/bin/env bash
set -euox pipefail

source "$(dirname "${BASH_SOURCE[0]}")"/vars

# Setup a tmp work dir
TMPDIR="$(mktemp -d)"
trap 'sudo rm -rf -- "$TMPDIR"' EXIT
pushd "$TMPDIR"

# Package options
TEMPLATE_DIR="$GIT_ROOT/templates/latest"
PACKAGE=cri-o
RUN_RELEASE=${RUN_RELEASE:-0}
NOMOCK=${NOMOCK:-0}

NOMOCK_ARG=
if [[ $NOMOCK == 1 ]]; then
    NOMOCK_ARG=--nomock
fi

export OBS_USERNAME=cri-o-release-bot

obs_stage() {
    if [[ "$COMMIT" != "" ]]; then
        # Patch the package metadata to download the latest commit
        sed -i 's;gs://cri-o/artifacts/cri-o.{{ .Architecture }}.v{{ .PackageVersion }}.tar.gz;gs://cri-o/artifacts/cri-o.{{ .Architecture }}.'"$COMMIT"'.tar.gz;g' "$TEMPLATE_DIR/metadata.yaml"
    fi
    echo "Staging https://build.opensuse.org/package/show/$PROJECT/$PACKAGE"

    # Push the sources
    krel obs stage \
        --log-level debug \
        --workspace . \
        --template-dir "$TEMPLATE_DIR" \
        --packages "$PACKAGE" \
        --project "$PROJECT" \
        --version "$VERSION" \
        --architectures amd64,arm64,ppc64le \
        --submit=false \
        --wait \
        $NOMOCK_ARG
}

obs_release() {
    krel obs release \
        --log-level debug \
        --workspace . \
        --template-dir "$TEMPLATE_DIR" \
        --packages "$PACKAGE" \
        --project "$PROJECT" \
        --submit=false \
        $NOMOCK_ARG
}

install_osc
install_krel

if [[ $RUN_RELEASE == 0 ]]; then
    obs_stage
else
    obs_release
fi
