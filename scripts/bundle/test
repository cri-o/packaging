#!/usr/bin/env bash
set -euox pipefail

# Check for root
if [[ $EUID -ne 0 ]]; then
    echo "Please run this script as root"
    exit 1
fi

source "$(dirname "${BASH_SOURCE[0]}")"/../vars

pushd "$ARCHIVE_PATH"

# Untar the bundle
find . -type f -iname "cri-o.amd64.*.tar.gz" -exec tar xfvz {} \;
pushd cri-o

# Install and prepare config
./install

# Start CRI-O
systemctl daemon-reload
systemctl start crio || (journalctl -xeu crio.service && exit 1)
systemctl is-active --quiet crio && echo CRI-O is running

crio version -j | jq -e '.gitCommit == "'"$COMMIT"'"'

# Run a workload
crictl version

CONTAINER_JSON="$GIT_ROOT/test/testdata/container.json"
POD_JSON="$GIT_ROOT/test/testdata/pod.json"

crictl -t=1m run "$CONTAINER_JSON" "$POD_JSON"

# Test the workloads status
POD_NAME=$(jq -r .metadata.name "$POD_JSON")
if [[ ! $(crictl pods --name "$POD_NAME" -s Ready -q) ]]; then
    echo "No ready pod found"
    exit 1
fi

CONTAINER_NAME=$(jq -r .metadata.name "$CONTAINER_JSON")
if [[ ! $(crictl ps --name "$CONTAINER_NAME" --state Exited -q) ]]; then
    echo "No container found"
    exit 1
fi

# Cleanup
crictl -t=1m rmp -fa
systemctl stop crio
